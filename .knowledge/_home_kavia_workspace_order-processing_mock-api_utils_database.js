{"is_source_file": true, "format": "JavaScript", "description": "Database utility module for handling file system operations, including initialization, reading, writing, and locking mechanisms to ensure data integrity.", "external_files": ["fs", "path"], "external_methods": [], "published": ["database"], "classes": [{"name": "Database", "description": "Class for managing database operations, including initialization, data reading and writing with atomic operations, and managing locks."}], "methods": [{"name": "initialize()", "description": "Initializes the database if it doesn't already exist, creating necessary directories and writing initial data.", "scope": "Database", "scopeKind": "class"}, {"name": "acquireLock()", "description": "Attempts to acquire a lock for database operations, retrying if necessary.", "scope": "Database", "scopeKind": "class"}, {"name": "releaseLock()", "description": "Releases the lock on the database if it exists.", "scope": "Database", "scopeKind": "class"}, {"name": "read()", "description": "Reads data from the database, acquiring a lock and handling initialization if the database file doesn't exist.", "scope": "Database", "scopeKind": "class"}, {"name": "write(data)", "description": "Writes data to the database with atomic operations, including creating backups and handling failures.", "scope": "Database", "scopeKind": "class"}, {"name": "getCollection(collection)", "description": "Retrieves a collection from the database by its name.", "scope": "Database", "scopeKind": "class"}, {"name": "updateCollection(collection, items)", "description": "Updates a specified collection in the database with new items.", "scope": "Database", "scopeKind": "class"}, {"name": "constructor(dbName)", "scope": "Database", "scopeKind": "class", "description": "unavailable"}], "calls": ["fs.mkdir", "fs.writeFile", "fs.readFile", "fs.copyFile", "fs.rename", "fs.unlink"], "search-terms": ["Database", "initialize", "acquireLock", "releaseLock", "read", "write", "getCollection", "updateCollection"], "state": 2, "file_id": 57, "knowledge_revision": 152, "git_revision": "", "ctags": [{"_type": "tag", "name": "Database", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^class Database {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "acquireLock", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^  async acquireLock() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "checkoutSessions", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^          checkoutSessions: []$/", "language": "JavaScript", "kind": "property", "scope": "Database.initialize.initialData", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^  constructor(dbName) {$/", "language": "JavaScript", "kind": "method", "signature": "(dbName)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^            created: new Date().toISOString()$/", "language": "JavaScript", "kind": "property", "scope": "Database.initialize.initialData.metadata", "scopeKind": "class"}, {"_type": "tag", "name": "customers", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^          customers: [],$/", "language": "JavaScript", "kind": "property", "scope": "Database.initialize.initialData", "scopeKind": "class"}, {"_type": "tag", "name": "database", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^const database = new Database();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fs", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^const fs = require('fs').promises;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fsSync", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^const fsSync = require('fs');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getCollection", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^  async getCollection(collection) {$/", "language": "JavaScript", "kind": "method", "signature": "(collection)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "initialData", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^        const initialData = {$/", "language": "JavaScript", "kind": "class", "scope": "Database.initialize", "scopeKind": "class"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^  async initialize() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "lastUpdated", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^            lastUpdated: new Date().toISOString(),$/", "language": "JavaScript", "kind": "property", "scope": "Database.initialize.initialData.metadata", "scopeKind": "class"}, {"_type": "tag", "name": "metadata", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^          metadata: {$/", "language": "JavaScript", "kind": "class", "scope": "Database.initialize.initialData", "scopeKind": "class"}, {"_type": "tag", "name": "orders", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^          orders: [],$/", "language": "JavaScript", "kind": "property", "scope": "Database.initialize.initialData", "scopeKind": "class"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^const path = require('path');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "payments", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^          payments: [],$/", "language": "JavaScript", "kind": "property", "scope": "Database.initialize.initialData", "scopeKind": "class"}, {"_type": "tag", "name": "products", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^          products: [],$/", "language": "JavaScript", "kind": "property", "scope": "Database.initialize.initialData", "scopeKind": "class"}, {"_type": "tag", "name": "read", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^  async read() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "releaseLock", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^  releaseLock() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "updateCollection", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^  async updateCollection(collection, items) {$/", "language": "JavaScript", "kind": "method", "signature": "(collection, items)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "version", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^            version: '1.0',$/", "language": "JavaScript", "kind": "property", "scope": "Database.initialize.initialData.metadata", "scopeKind": "class"}, {"_type": "tag", "name": "write", "path": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "pattern": "/^  async write(data) {$/", "language": "JavaScript", "kind": "method", "signature": "(data)", "scope": "Database", "scopeKind": "class"}], "filename": "/home/kavia/workspace/order-processing/mock-api/utils/database.js", "hash": "1edd0dd8a379f4ee772fc1560ac778d4", "format-version": 4, "code-base-name": "default", "fields": [{"name": "checkoutSessions: []", "scope": "Database.initialize.initialData", "scopeKind": "class", "description": "unavailable"}, {"name": "created: new Date().toISOString()", "scope": "Database.initialize.initialData.metadata", "scopeKind": "class", "description": "unavailable"}, {"name": "customers: [],", "scope": "Database.initialize.initialData", "scopeKind": "class", "description": "unavailable"}, {"name": "lastUpdated: new Date().toISOString(),", "scope": "Database.initialize.initialData.metadata", "scopeKind": "class", "description": "unavailable"}, {"name": "orders: [],", "scope": "Database.initialize.initialData", "scopeKind": "class", "description": "unavailable"}, {"name": "payments: [],", "scope": "Database.initialize.initialData", "scopeKind": "class", "description": "unavailable"}, {"name": "products: [],", "scope": "Database.initialize.initialData", "scopeKind": "class", "description": "unavailable"}, {"name": "version: '1.0',", "scope": "Database.initialize.initialData.metadata", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"152": ""}]}