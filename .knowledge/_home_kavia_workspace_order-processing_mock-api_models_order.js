{"is_source_file": true, "format": "JavaScript", "description": "Order model and data access functions with atomic file operations and proper error handling.", "external_files": ["../data/database.json", "../data/database.temp.json", "../data/database.backup.json", "../data/database.lock"], "external_methods": ["uuid.v4", "fs.promises.mkdir", "fs.promises.writeFile", "fs.promises.readFile", "fs.promises.rename", "fs.promises.copyFile", "fs.promises.unlink"], "published": ["getOrders", "getOrderById", "createOrder", "updateOrderStatus", "deleteOrder"], "classes": [], "methods": [{"name": "initializeDatabase", "description": "Initializes the database by creating necessary directories and writing initial data if the database does not exist."}, {"name": "acquireLock", "description": "Attempts to acquire a lock file to ensure exclusive access to the database."}, {"name": "releaseLock", "description": "Releases the lock file after database operations are completed."}, {"name": "readOrdersFromFile", "description": "Reads orders from the database file, initializing the database if it does not exist."}, {"name": "validateOrder", "description": "Validates the structure and required fields of an order."}, {"name": "saveOrdersToFile", "description": "Saves an array of orders to the database using atomic file operations."}, {"name": "getOrders", "description": "Retrieves all orders from the database."}, {"name": "getOrderById", "description": "Fetches a specific order by its ID from the database."}, {"name": "createOrder", "description": "Creates a new order with provided data and saves it to the database."}, {"name": "updateOrderStatus", "description": "Updates the status of an order by its ID."}, {"name": "deleteOrder", "description": "Deletes an order from the database by its ID."}], "calls": ["fsSynch.existsSync", "fs.writeFileSync", "fs.readFile", "fs.unlink", "fs.mkdir"], "search-terms": ["order", "model", "database", "UUID"], "state": 2, "file_id": 41, "knowledge_revision": 148, "git_revision": "453a2f3fb3cab75c3f058ba4d2b6215260b70208", "revision_history": [{"90": ""}, {"134": "70f23bcd3f2a1a4a2871cd672a5343daafc3826e"}, {"135": "70f23bcd3f2a1a4a2871cd672a5343daafc3826e"}, {"136": "70f23bcd3f2a1a4a2871cd672a5343daafc3826e"}, {"137": "70f23bcd3f2a1a4a2871cd672a5343daafc3826e"}, {"138": "337f4868fe55857badb21521f3fa07f7dce42a7a"}, {"139": "337f4868fe55857badb21521f3fa07f7dce42a7a"}, {"141": "337f4868fe55857badb21521f3fa07f7dce42a7a"}, {"142": "337f4868fe55857badb21521f3fa07f7dce42a7a"}, {"143": "337f4868fe55857badb21521f3fa07f7dce42a7a"}, {"144": "453a2f3fb3cab75c3f058ba4d2b6215260b70208"}, {"145": "453a2f3fb3cab75c3f058ba4d2b6215260b70208"}, {"146": "453a2f3fb3cab75c3f058ba4d2b6215260b70208"}, {"147": "453a2f3fb3cab75c3f058ba4d2b6215260b70208"}, {"148": "453a2f3fb3cab75c3f058ba4d2b6215260b70208"}], "ctags": [{"_type": "tag", "name": "acquireLock", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const acquireLock = async () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "attempts", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^    let attempts = 0;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "backupDbPath", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const backupDbPath = path.join(__dirname, '..\\/data\\/database.backup.json');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "checkoutSessions", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^        checkoutSessions: []$/", "language": "JavaScript", "kind": "property", "scope": "initialData", "scopeKind": "class"}, {"_type": "tag", "name": "createOrder", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const createOrder = (orderData) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^          created: new Date().toISOString()$/", "language": "JavaScript", "kind": "property", "scope": "initialData.metadata", "scopeKind": "class"}, {"_type": "tag", "name": "customers", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^        customers: [],$/", "language": "JavaScript", "kind": "property", "scope": "initialData", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^    const data = await fs.readFile(dbPath, 'utf8');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "db", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^    const db = JSON.parse(data);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "dbPath", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const dbPath = path.join(__dirname, '..\\/data\\/database.json');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "deleteOrder", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const deleteOrder = (id) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fs", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const fs = require('fs').promises;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fsSync", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const fsSync = require('fs');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getOrderById", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const getOrderById = (id) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getOrders", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^  getOrders,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "getOrders", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const getOrders = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^      id: uuidv4(),$/", "language": "JavaScript", "kind": "property", "scope": "newOrder", "scopeKind": "class"}, {"_type": "tag", "name": "initialData", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^      const initialData = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "initialLength", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^    const initialLength = orders.length;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "initializeDatabase", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const initializeDatabase = async () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "lastUpdated", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^          lastUpdated: new Date().toISOString(),$/", "language": "JavaScript", "kind": "property", "scope": "initialData.metadata", "scopeKind": "class"}, {"_type": "tag", "name": "lockFilePath", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const lockFilePath = path.join(__dirname, '..\\/data\\/database.lock');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "maxAttempts", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^    const maxAttempts = 5;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "metadata", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^        metadata: {$/", "language": "JavaScript", "kind": "class", "scope": "initialData", "scopeKind": "class"}, {"_type": "tag", "name": "missingFields", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^  const missingFields = requiredFields.filter(field => !order[field]);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "newOrder", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^    const newOrder = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "orderDate", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^      orderDate: new Date().toISOString(),$/", "language": "JavaScript", "kind": "property", "scope": "newOrder", "scopeKind": "class"}, {"_type": "tag", "name": "orderIndex", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^    const orderIndex = orders.findIndex(order => order.id === id);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "orderNumber", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^      orderNumber: `ORD-${Date.now()}`,$/", "language": "JavaScript", "kind": "property", "scope": "newOrder", "scopeKind": "class"}, {"_type": "tag", "name": "orderToDelete", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^    const orderToDelete = orders.find(order => order.id === id);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "orders", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^        orders: [],$/", "language": "JavaScript", "kind": "property", "scope": "initialData", "scopeKind": "class"}, {"_type": "tag", "name": "orders", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^let orders = readOrdersFromFile();$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const path = require('path');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "payments", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^        payments: [],$/", "language": "JavaScript", "kind": "property", "scope": "initialData", "scopeKind": "class"}, {"_type": "tag", "name": "products", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^        products: [],$/", "language": "JavaScript", "kind": "property", "scope": "initialData", "scopeKind": "class"}, {"_type": "tag", "name": "readOrdersFromFile", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const readOrdersFromFile = async () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "releaseLock", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const releaseLock = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "requiredFields", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^  const requiredFields = ['id', 'orderNumber', 'orderDate', 'status', 'customerId', 'items'];$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "retryDelay", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^    const retryDelay = 100; \\/\\/ ms$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "saveOrdersToFile", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const saveOrdersToFile = async (orders) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^      status: 'CREATED',$/", "language": "JavaScript", "kind": "property", "scope": "newOrder", "scopeKind": "class"}, {"_type": "tag", "name": "tempDbPath", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const tempDbPath = path.join(__dirname, '..\\/data\\/database.temp.json');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "updateOrderStatus", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const updateOrderStatus = (id, status) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "validStatuses", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^    const validStatuses = ['CREATED', 'PROCESSING', 'SHIPPED', 'DELIVERED', 'CANCELLED'];$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "validStatuses", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^  const validStatuses = ['CREATED', 'PROCESSING', 'SHIPPED', 'DELIVERED', 'CANCELLED'];$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "validateOrder", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^const validateOrder = (order) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "version", "path": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "pattern": "/^          version: '1.0',$/", "language": "JavaScript", "kind": "property", "scope": "initialData.metadata", "scopeKind": "class"}], "filename": "/home/kavia/workspace/order-processing/mock-api/models/order.js", "hash": "20d5fda1725f9121b9fa901611b35ad0", "format-version": 4, "code-base-name": "default", "fields": [{"name": "let attempts = 0;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "checkoutSessions: []", "scope": "initialData", "scopeKind": "class", "description": "unavailable"}, {"name": "created: new Date().toISOString()", "scope": "initialData.metadata", "scopeKind": "class", "description": "unavailable"}, {"name": "customers: [],", "scope": "initialData", "scopeKind": "class", "description": "unavailable"}, {"name": "getOrders,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}, {"name": "id: uuidv4(),", "scope": "newOrder", "scopeKind": "class", "description": "unavailable"}, {"name": "lastUpdated: new Date().toISOString(),", "scope": "initialData.metadata", "scopeKind": "class", "description": "unavailable"}, {"name": "orderDate: new Date().toISOString(),", "scope": "newOrder", "scopeKind": "class", "description": "unavailable"}, {"name": "orderNumber: `ORD-${Date.now()}`,", "scope": "newOrder", "scopeKind": "class", "description": "unavailable"}, {"name": "orders: [],", "scope": "initialData", "scopeKind": "class", "description": "unavailable"}, {"name": "let orders = readOrdersFromFile();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "payments: [],", "scope": "initialData", "scopeKind": "class", "description": "unavailable"}, {"name": "products: [],", "scope": "initialData", "scopeKind": "class", "description": "unavailable"}, {"name": "status: 'CREATED',", "scope": "newOrder", "scopeKind": "class", "description": "unavailable"}, {"name": "version: '1.0',", "scope": "initialData.metadata", "scopeKind": "class", "description": "unavailable"}]}