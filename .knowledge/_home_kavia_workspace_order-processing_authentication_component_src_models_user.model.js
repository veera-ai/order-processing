{"is_source_file": true, "format": "JavaScript", "description": "This file defines a Mongoose schema for the User model used in a MongoDB-based authentication system, including password hashing and login attempt handling.", "external_files": ["mongoose", "bcrypt"], "external_methods": ["bcrypt.genSalt", "bcrypt.hash", "bcrypt.compare"], "published": ["User"], "classes": [], "methods": [{"name": "comparePassword(candidatePassword)", "description": "Compares a candidate password with the hashed password stored in the model.", "scope": "userSchema.methods", "scopeKind": "function"}, {"name": "isLocked()", "description": "Checks whether the user account is locked.", "scope": "userSchema.methods", "scopeKind": "function"}, {"name": "incrementLoginAttempts()", "description": "Increments the login attempt count and locks the account if maximum attempts are exceeded.", "scope": "userSchema.methods", "scopeKind": "function"}, {"name": "AnonymousFunction0834acae0100(doc, ret)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "AnonymousFunction0834acae0200(next)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["bcrypt.genSalt", "bcrypt.hash", "bcrypt.compare", "this.updateOne"], "search-terms": ["User model", "authentication", "Mongoose schema", "password hashing", "login attempts"], "state": 2, "file_id": 17, "knowledge_revision": 66, "git_revision": "8296b8630f75858aa9ee4b404a93a5282a92129b", "revision_history": [{"35": ""}, {"47": ""}, {"65": "8296b8630f75858aa9ee4b404a93a5282a92129b"}, {"66": "8296b8630f75858aa9ee4b404a93a5282a92129b"}], "ctags": [{"_type": "tag", "name": "$inc", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^  const updates = { $inc: { loginAttempts: 1 } };$/", "language": "JavaScript", "kind": "class", "scope": "userSchema.methods.incrementLoginAttempts.updates", "scopeKind": "class"}, {"_type": "tag", "name": "$set", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^    updates.$set = { lockUntil: Date.now() + 3600000 }; \\/\\/ Lock for 1 hour$/", "language": "JavaScript", "kind": "class", "scope": "updates", "scopeKind": "class"}, {"_type": "tag", "name": "AnonymousFunction0834acae0100", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^    transform: function(doc, ret) {$/", "language": "JavaScript", "kind": "function", "signature": "(doc, ret)"}, {"_type": "tag", "name": "AnonymousFunction0834acae0200", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^userSchema.pre('save', async function(next) {$/", "language": "JavaScript", "kind": "function", "signature": "(next)"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^const User = mongoose.model('User', userSchema);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "comparePassword", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^userSchema.methods.comparePassword = async function(candidatePassword) {$/", "language": "JavaScript", "kind": "function", "signature": "(candidatePassword)", "scope": "userSchema.methods", "scopeKind": "function"}, {"_type": "tag", "name": "incrementLoginAttempts", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^userSchema.methods.incrementLoginAttempts = async function() {$/", "language": "JavaScript", "kind": "function", "signature": "()", "scope": "userSchema.methods", "scopeKind": "function"}, {"_type": "tag", "name": "isLocked", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^userSchema.methods.isLocked = function() {$/", "language": "JavaScript", "kind": "function", "signature": "()", "scope": "userSchema.methods", "scopeKind": "function"}, {"_type": "tag", "name": "lockUntil", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^    updates.$set = { lockUntil: Date.now() + 3600000 }; \\/\\/ Lock for 1 hour$/", "language": "JavaScript", "kind": "property", "scope": "updates.$set", "scopeKind": "class"}, {"_type": "tag", "name": "loginAttempts", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^  const updates = { $inc: { loginAttempts: 1 } };$/", "language": "JavaScript", "kind": "property", "scope": "userSchema.methods.incrementLoginAttempts.updates.$inc", "scopeKind": "class"}, {"_type": "tag", "name": "updates", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^  const updates = { $inc: { loginAttempts: 1 } };$/", "language": "JavaScript", "kind": "class", "scope": "userSchema.methods.incrementLoginAttempts", "scopeKind": "class"}, {"_type": "tag", "name": "userSchema", "path": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "pattern": "/^const userSchema = new mongoose.Schema({$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/order-processing/authentication_component/src/models/user.model.js", "hash": "17c7f17e6cff27cf1346cc30c4c61611", "format-version": 4, "code-base-name": "default", "fields": [{"name": "updates.$set = { lockUntil: Date.now() + 3600000 }; \\/\\/ Lock for 1 hour", "scope": "updates.$set", "scopeKind": "class", "description": "unavailable"}, {"name": "const updates = { $inc: { loginAttempts: 1 } };", "scope": "userSchema.methods.incrementLoginAttempts.updates.$inc", "scopeKind": "class", "description": "unavailable"}]}